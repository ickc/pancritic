# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on: [push, pull_request]

jobs:
  build-n-publish:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # see setup.py for supported versions
        python-version:
          - 2.7
          - 3.5
          - 3.6
          - 3.7
          - 3.8
          - 3.9
          - pypy2
          - pypy3
        # should test sparingly across API breaking boundaries
        pandoc-version:
          # - 2.0.6
          # - 2.1.3
          # - 2.2.3.2
          # - 2.3.1
          # - 2.4
          # - 2.5
          # - 2.6
          # - 2.7.3
          # - 2.8.1
          - 2.9.2.1
          # - 2.10.1
          # - 2.11.0.4
          - latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependenciesâ€”pip
      run: |
        pip install -U pip
        pip install -e .[test]
    - name: Install dependenciesâ€”pandoc
      run: |
        # pandoc
        [[ ${{ matrix.pandoc-version }} == "latest" ]] && url="https://github.com/jgm/pandoc/releases/latest" || url="https://github.com/jgm/pandoc/releases/tag/${{ matrix.pandoc-version }}"
        downloadUrl="https://github.com$(curl -L $url | grep -o '/jgm/pandoc/releases/download/.*-amd64\.deb')"
        wget --quiet "$downloadUrl"
        sudo dpkg -i "${downloadUrl##*/}"
    - name: Tests
      # this kind of defeat CI, but they might not provide identical outputs...
      run: make -j4 test ERRORCODE=0
    - name: Coverageâ€”Coveralls
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel: true
        flag-name: python-${{ matrix.python-version }}_pandoc-${{ matrix.pandoc-version }}
    - name: Coverageâ€”Codecov
      uses: codecov/codecov-action@v1
      with:
        file: ./coverage.xml
    # c.f. https://packaging.python.org/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/
    - name: Prepare to publish
      if: ${{ startsWith(github.event.ref, 'refs/tags') && matrix.python-version == 3.9 && matrix.pandoc-version == 'latest' }}
      run: python setup.py sdist bdist_wheel
    - name: Publish distribution ðŸ“¦ to PyPI
      if: ${{ startsWith(github.event.ref, 'refs/tags') && matrix.python-version == 3.9 && matrix.pandoc-version == 'latest' }}
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.pypi_password }}

  coveralls_finish:
    needs: build-n-publish
    runs-on: ubuntu-latest
    steps:
    - name: Coverageâ€”Coveralls finishing
      uses: AndreMiras/coveralls-python-action@develop
      with:
        parallel-finished: true
